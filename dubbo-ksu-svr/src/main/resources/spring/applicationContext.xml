<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd

        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--<context:property-placeholder location="classpath:*.properties" />-->
    <context:component-scan base-package="com.luotao.showcase.svr"/>

    <aop:aspectj-autoproxy/>

    <!-- dubbo监控，切勿删除 -->
    <!--<dubbo:monitor protocol="registry"/>-->

    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="ksu-svr"/>

    <!-- 使用multicast广播注册中心暴露服务地址 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" check="false"/>
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="28002"/>

    <dubbo:provider retries="0" filter="tracingFilter"/>
    <!--<dubbo:consumer retries="0" filter="tracingFilter"/> -->
    <!--<dubbo:provider retries="0" />-->
    <dubbo:consumer retries="0" filter="tracingFilter"/>


    <bean id="sender" class="zipkin2.reporter.beans.KafkaSenderFactoryBean">
        <!--<property name="endpoint" value="http://localhost:9411/api/v2/spans"/>-->
        <property name="bootstrapServers" value="localhost:9092"/>
        <property name="topic" value="zipkin"/>
    </bean>
    <!-- Controls aspects of tracing such as the service name that shows up in the UI -->
    <bean id="tracing" class="brave.spring.beans.TracingFactoryBean">
        <property name="localServiceName" value="brave-webmvc-example"/>
        <property name="spanReporter">
            <bean class="zipkin2.reporter.beans.AsyncReporterFactoryBean">
                <property name="encoder" value="JSON_V2"/>
                <property name="sender" ref="sender"/>
                <!-- wait up to half a second for any in-flight spans on close -->
                <property name="closeTimeout" value="500"/>
            </bean>
        </property>
        <property name="propagationFactory">
            <bean id="propagationFactory" class="brave.propagation.ExtraFieldPropagation"
                  factory-method="newFactory">
                <constructor-arg index="0">
                    <util:constant static-field="brave.propagation.B3Propagation.FACTORY"/>
                </constructor-arg>
                <constructor-arg index="1">
                    <list>
                        <value>user-name</value>
                    </list>
                </constructor-arg>
            </bean>
        </property>
        <property name="currentTraceContext">
            <bean class="brave.spring.beans.CurrentTraceContextFactoryBean">
                <property name="scopeDecorators">
                    <bean class="brave.context.slf4j.MDCScopeDecorator" factory-method="create"/>
                </property>
            </bean>
        </property>
        <!--<property name="currentTraceContext">-->
        <!--<bean class="brave.context.slf4j.MDCCurrentTraceContext" factory-method="create"/>-->
        <!--</property>-->
    </bean>

    <import resource="applicationContext-ksu-provider.xml"/>
    <import resource="applicationContext-consumer-baseuser.xml"/>

</beans>
